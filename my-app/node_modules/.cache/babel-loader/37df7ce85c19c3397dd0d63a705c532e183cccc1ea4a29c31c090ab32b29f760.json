{"ast":null,"code":"var _jsxFileName = \"/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx\",\n  _s = $RefreshSig$();\n// transportDepartures.tsx\nimport { useState, useRef } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = () => {\n  _s();\n  const [location, setLocation] = useState('');\n  const [address, setAddress] = useState('');\n  const inputRef = useRef(null);\n  const getLocation = async () => {\n    if (address.trim() === '') {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          setLocation(`Latitude: ${latitude}, Longitude: ${longitude}`);\n        }, () => {\n          setLocation('Unable to retrieve location.');\n        });\n      } else {\n        setLocation('Geolocation is not supported by this browser.');\n      }\n    } else {\n      try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);\n        const data = await response.json();\n        if (data.length > 0) {\n          const {\n            lat,\n            lon\n          } = data[0];\n          setLocation(`Your Location is ${address} üëâüèª Latitude: ${lat}, Longitude: ${lon}`);\n          if (inputRef.current) {\n            inputRef.current.value = '';\n          }\n          setAddress('');\n        } else {\n          setLocation('Location not found.');\n        }\n      } catch {\n        setLocation('Error fetching location.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SearchBox\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n};\n_s(SearchBox, \"hRHoolBYmQ948oNY0t/KFw67HmQ=\");\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["useState","useRef","React","jsxDEV","_jsxDEV","SearchBox","_s","location","setLocation","address","setAddress","inputRef","getLocation","trim","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","response","fetch","encodeURIComponent","data","json","length","lat","lon","current","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx"],"sourcesContent":["// transportDepartures.tsx\r\nimport { useState, useRef } from 'react';\r\n\r\n\r\n  import React from 'react'\r\n  \r\n  const SearchBox = () => {\r\n    const [location, setLocation] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n\r\n    const getLocation = async () => {\r\n      if (address.trim() === '') {\r\n     if (navigator.geolocation) {\r\n     navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n     const latitude = position.coords.latitude;\r\n     const longitude = position.coords.longitude;\r\n     setLocation(`Latitude: ${latitude}, Longitude: ${longitude}`);\r\n      },\r\n      () => {\r\n     setLocation('Unable to retrieve location.');\r\n      }\r\n      );\r\n    } else {\r\n      setLocation('Geolocation is not supported by this browser.');\r\n      }\r\n      } else {\r\n     try {\r\n     const response = await fetch(\r\n     `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n     address\r\n     )}`\r\n      );\r\n      const data = await response.json();\r\n     if (data.length > 0) {\r\n    const { lat, lon } = data[0];\r\n    setLocation(\r\n    `Your Location is ${address} üëâüèª Latitude: ${lat}, Longitude: ${lon}`\r\n     );\r\n    if (inputRef.current) {\r\n    inputRef.current.value = '';\r\n     }\r\n    setAddress('');\r\n     } else {\r\n    setLocation('Location not found.');\r\n     }\r\n    } catch {\r\n     setLocation('Error fetching location.');\r\n     }\r\n     }\r\n     };\r\n    return (\r\n      <div>SearchBox</div>\r\n    )\r\n  }\r\n  \r\n  export default SearchBox\r\n  "],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAGtC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EACtD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAMW,QAAQ,GAAGV,MAAM,CAAmB,IAAI,CAAC;EAG7C,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIH,OAAO,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,IAAIC,SAAS,CAACC,WAAW,EAAE;QAC3BD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtCC,QAAQ,IAAK;UACf,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACD,QAAQ;UACzC,MAAME,SAAS,GAAGH,QAAQ,CAACE,MAAM,CAACC,SAAS;UAC3CZ,WAAW,CAAC,aAAaU,QAAQ,gBAAgBE,SAAS,EAAE,CAAC;QAC5D,CAAC,EACD,MAAM;UACPZ,WAAW,CAAC,8BAA8B,CAAC;QAC1C,CACA,CAAC;MACH,CAAC,MAAM;QACLA,WAAW,CAAC,+CAA+C,CAAC;MAC5D;IACA,CAAC,MAAM;MACR,IAAI;QACJ,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAC5B,4DAA4DC,kBAAkB,CAC9Ed,OACA,CAAC,EACA,CAAC;QACD,MAAMe,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACnC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UACtB,MAAM;YAAEC,GAAG;YAAEC;UAAI,CAAC,GAAGJ,IAAI,CAAC,CAAC,CAAC;UAC5BhB,WAAW,CACX,oBAAoBC,OAAO,mBAAmBkB,GAAG,gBAAgBC,GAAG,EACnE,CAAC;UACF,IAAIjB,QAAQ,CAACkB,OAAO,EAAE;YACtBlB,QAAQ,CAACkB,OAAO,CAACC,KAAK,GAAG,EAAE;UAC1B;UACDpB,UAAU,CAAC,EAAE,CAAC;QACb,CAAC,MAAM;UACRF,WAAW,CAAC,qBAAqB,CAAC;QACjC;MACD,CAAC,CAAC,MAAM;QACPA,WAAW,CAAC,0BAA0B,CAAC;MACvC;IACA;EACA,CAAC;EACF,oBACEJ,OAAA;IAAA2B,QAAA,EAAK;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAExB,CAAC;AAAA7B,EAAA,CAlDKD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAoDf,eAAeA,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}