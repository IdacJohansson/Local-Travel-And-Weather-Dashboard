{"ast":null,"code":"var _jsxFileName = \"/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx\",\n  _s = $RefreshSig$();\n// transportDepartures.tsx\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = () => {\n  _s();\n  const {\n    location,\n    address,\n    setLocation,\n    setAddress\n  } = useLocationStore();\n  const inputRef = useRef(null);\n  const getLocation = async () => {\n    if (address.trim() === \"\") {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          setLocation(`Latitude: ${latitude}, Longitude: ${longitude}`);\n        }, () => {\n          setLocation(\"Unable to retrieve location.\");\n        });\n      } else {\n        setLocation(\"Geolocation is not supported by this browser.\");\n      }\n    } else {\n      try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);\n        const data = await response.json();\n        if (data.length > 0) {\n          const {\n            lat,\n            lon\n          } = data[0];\n          setLocation(`Your Location is ${address} üëâüèª Latitude: ${lat}, Longitude: ${lon}`);\n          if (inputRef.current) {\n            inputRef.current.value = \"\";\n          }\n          setAddress(\"\");\n        } else {\n          setLocation(\"Location not found.\");\n        }\n      } catch {\n        setLocation(\"Error fetching location.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"500px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        placeholder: \"Search for a location...\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        className: \"form-control border-primary shadow-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getLocation,\n        className: \"mt-3 btn btn-primary\",\n        children: \"Get Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBox, \"CF658nZE/oT5q5vlMYsE9dE2n1w=\", true);\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","SearchBox","_s","location","address","setLocation","setAddress","useLocationStore","inputRef","getLocation","trim","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","response","fetch","encodeURIComponent","data","json","length","lat","lon","current","value","children","style","maxWidth","width","ref","type","placeholder","onChange","e","target","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx"],"sourcesContent":["// transportDepartures.tsx\r\nimport { useState, useRef } from \"react\";\r\n\r\nconst SearchBox = () => {\r\n  const { location, address, setLocation, setAddress } = useLocationStore();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const getLocation = async () => {\r\n    if (address.trim() === \"\") {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const latitude = position.coords.latitude;\r\n            const longitude = position.coords.longitude;\r\n            setLocation(`Latitude: ${latitude}, Longitude: ${longitude}`);\r\n          },\r\n          () => {\r\n            setLocation(\"Unable to retrieve location.\");\r\n          }\r\n        );\r\n      } else {\r\n        setLocation(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch(\r\n          `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n            address\r\n          )}`\r\n        );\r\n        const data = await response.json();\r\n        if (data.length > 0) {\r\n          const { lat, lon } = data[0];\r\n          setLocation(\r\n            `Your Location is ${address} üëâüèª Latitude: ${lat}, Longitude: ${lon}`\r\n          );\r\n          if (inputRef.current) {\r\n            inputRef.current.value = \"\";\r\n          }\r\n          setAddress(\"\");\r\n        } else {\r\n          setLocation(\"Location not found.\");\r\n        }\r\n      } catch {\r\n        setLocation(\"Error fetching location.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Search Input with Button */}\r\n      <div style={{ maxWidth: \"500px\", width: \"100%\" }}>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          placeholder=\"Search for a location...\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          className=\"form-control border-primary shadow-sm\"\r\n        />\r\n        <button onClick={getLocation} className=\"mt-3 btn btn-primary\">\r\n          Get Location\r\n        </button>\r\n      </div>\r\n      {/* Display Location */}\r\n      <p className=\"mt-3\">{location}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}