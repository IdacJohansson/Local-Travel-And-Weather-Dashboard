{"ast":null,"code":"// import { create } from \"zustand\";\n\n// interface LocationState {\n//     location: {latitude: number, longitude: number};\n//     address: string;\n//     setLocation: (latitude: number, longitude: number) => void;\n//     setAddress: (address: string) => void;\n//   }\n\n//   export const useLocationStore = create<LocationState>((set) => ({\n//     location: {latitude: 0, longitude: 0},\n//     address: \"\",\n//     setLocation: (location) => {\n//       console.log(\"setting location från userInputStore: \", latitude, longitude);\n//       set({ location: {latitude, longitude} });\n//     },\n//     setAddress: (address) => {\n//       set({ address });\n//     },\n//   }));\n\n// frel format?","map":{"version":3,"names":[],"sources":["/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/store/useInputStore.tsx"],"sourcesContent":["// import { create } from \"zustand\";\n\n// interface LocationState {\n//     location: {latitude: number, longitude: number};\n//     address: string;\n//     setLocation: (latitude: number, longitude: number) => void;\n//     setAddress: (address: string) => void;\n//   }\n  \n//   export const useLocationStore = create<LocationState>((set) => ({\n//     location: {latitude: 0, longitude: 0},\n//     address: \"\",\n//     setLocation: (location) => {\n//       console.log(\"setting location från userInputStore: \", latitude, longitude);\n//       set({ location: {latitude, longitude} });\n//     },\n//     setAddress: (address) => {\n//       set({ address });\n//     },\n//   }));\n\n\n\n  // frel format? "],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}