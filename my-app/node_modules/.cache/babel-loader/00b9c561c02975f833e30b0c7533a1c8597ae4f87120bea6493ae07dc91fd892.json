{"ast":null,"code":"// import { useState, useRef, useEffect } from \"react\";\n// import { useLocationStore } from \"../../store/useInputStore\";\n// import { useTrafficStore } from \"../../store/useTrafficStore\";\n\n// const SearchBox = () => {\n//   const { location, address, setLocation, setAddress } = useLocationStore();\n//   const { fetchTrafficUpdates } = useTrafficStore();\n//   const inputRef = useRef<HTMLInputElement>(null);\n\n//   useEffect(() => {\n//     console.log(\"Location in SearchBox:\", location);\n//     if (location) {\n//       fetchTrafficUpdates();\n//     }\n//   }, [location]);\n\n//   const getLocation = async () => {\n//     if (address.trim() === \"\") {\n//       if (navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(\n//           (position) => {\n//             const latitude = position.coords.latitude;\n//             const longitude = position.coords.longitude;\n//             setLocation({ latitude, longitude });\n//           },\n//           () => {\n//             console.error(\"Unable to retrieve location.\");\n//           }\n//         );\n//       } else {\n//         console.error(\"Geolocation is not supported by this browser.\");\n//       }\n//     } else {\n//       try {\n//         const response = await fetch(\n//           `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\n//             address\n//           )}`\n//         );\n//         const data = await response.json();\n//         if (data.length > 0) {\n//           const { lat, lon } = data[0];\n//           setLocation({\n//             latitude: parseFloat(lat),\n//             longitude: parseFloat(lon),\n//           });\n//           setAddress(\"\");\n//         } else {\n//           console.error(\"Location not found.\");\n//         }\n//       } catch {\n//         console.error(\"Error fetching location.\");\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         ref={inputRef}\n//         type=\"text\"\n//         placeholder=\"Search for a location...\"\n//         value={address}\n//         onChange={(e) => setAddress(e.target.value)}\n//       />\n//       <button onClick={getLocation}>Get Location</button>\n//       <p>\n//         {location\n//           ? `Latitude: ${location.latitude}, Longitude: ${location.longitude}`\n//           : \"No location available\"}\n//       </p>\n//     </div>\n//   );\n// };\n\n// export default SearchBox;","map":{"version":3,"names":[],"sources":["/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx"],"sourcesContent":["// import { useState, useRef, useEffect } from \"react\";\r\n// import { useLocationStore } from \"../../store/useInputStore\";\r\n// import { useTrafficStore } from \"../../store/useTrafficStore\";\r\n\r\n// const SearchBox = () => {\r\n//   const { location, address, setLocation, setAddress } = useLocationStore();\r\n//   const { fetchTrafficUpdates } = useTrafficStore();\r\n//   const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n//   useEffect(() => {\r\n//     console.log(\"Location in SearchBox:\", location);\r\n//     if (location) {\r\n//       fetchTrafficUpdates();\r\n//     }\r\n//   }, [location]);\r\n\r\n//   const getLocation = async () => {\r\n//     if (address.trim() === \"\") {\r\n//       if (navigator.geolocation) {\r\n//         navigator.geolocation.getCurrentPosition(\r\n//           (position) => {\r\n//             const latitude = position.coords.latitude;\r\n//             const longitude = position.coords.longitude;\r\n//             setLocation({ latitude, longitude });\r\n//           },\r\n//           () => {\r\n//             console.error(\"Unable to retrieve location.\");\r\n//           }\r\n//         );\r\n//       } else {\r\n//         console.error(\"Geolocation is not supported by this browser.\");\r\n//       }\r\n//     } else {\r\n//       try {\r\n//         const response = await fetch(\r\n//           `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n//             address\r\n//           )}`\r\n//         );\r\n//         const data = await response.json();\r\n//         if (data.length > 0) {\r\n//           const { lat, lon } = data[0];\r\n//           setLocation({\r\n//             latitude: parseFloat(lat),\r\n//             longitude: parseFloat(lon),\r\n//           });\r\n//           setAddress(\"\");\r\n//         } else {\r\n//           console.error(\"Location not found.\");\r\n//         }\r\n//       } catch {\r\n//         console.error(\"Error fetching location.\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         ref={inputRef}\r\n//         type=\"text\"\r\n//         placeholder=\"Search for a location...\"\r\n//         value={address}\r\n//         onChange={(e) => setAddress(e.target.value)}\r\n//       />\r\n//       <button onClick={getLocation}>Get Location</button>\r\n//       <p>\r\n//         {location\r\n//           ? `Latitude: ${location.latitude}, Longitude: ${location.longitude}`\r\n//           : \"No location available\"}\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchBox;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}