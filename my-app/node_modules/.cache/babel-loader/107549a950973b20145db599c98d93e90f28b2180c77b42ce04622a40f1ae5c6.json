{"ast":null,"code":"var _jsxFileName = \"/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport { useLocationStore } from \"../../store/useLocationStore\";\nimport { useTrafficStore } from \"../../store/useTrafficStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = () => {\n  _s();\n  const {\n    location,\n    address,\n    setLocation,\n    setAddress\n  } = useLocationStore();\n  const {\n    fetchTrafficUpdates\n  } = useTrafficStore();\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (location) {\n      console.log(\"Location updated, fetching traffic updates...\");\n      fetchTrafficUpdates();\n    }\n  }, [location]);\n  const getLocation = async () => {\n    if (address.trim() === \"\") {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(({\n          coords: {\n            latitude,\n            longitude\n          }\n        }) => {\n          setLocation({\n            latitude,\n            longitude\n          });\n          fetchTrafficUpdates();\n        }, () => console.error(\"Unable to retrieve location.\"));\n      } else {\n        console.error(\"Geolocation is not supported.\");\n      }\n    } else {\n      try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);\n        const [location] = await response.json();\n        if (location) {\n          const {\n            lat,\n            lon\n          } = location;\n          setLocation({\n            latitude: parseFloat(lat),\n            longitude: parseFloat(lon)\n          });\n          setAddress(\"\");\n          fetchTrafficUpdates();\n        } else {\n          console.error(\"Location not found for address:\", address);\n        }\n      } catch (error) {\n        console.error(\"Error fetching location for address:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"Search for a location...\",\n      value: address,\n      onChange: e => setAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocation,\n      children: \"Get Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: location ? `Latitude: ${location.latitude}, Longitude: ${location.longitude}` : \"No location available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBox, \"Sg0BO9Iq3J/qjGWf1Aykpq5s/Fw=\", false, function () {\n  return [useLocationStore, useTrafficStore];\n});\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["useRef","useEffect","useLocationStore","useTrafficStore","jsxDEV","_jsxDEV","SearchBox","_s","location","address","setLocation","setAddress","fetchTrafficUpdates","inputRef","console","log","getLocation","trim","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","response","fetch","encodeURIComponent","json","lat","lon","parseFloat","children","ref","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\r\nimport { useLocationStore } from \"../../store/useLocationStore\";\r\nimport { useTrafficStore } from \"../../store/useTrafficStore\";\r\n\r\nconst SearchBox = () => {\r\n  const { location, address, setLocation, setAddress } = useLocationStore();\r\n  const { fetchTrafficUpdates } = useTrafficStore();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (location) {\r\n      console.log(\"Location updated, fetching traffic updates...\");\r\n      fetchTrafficUpdates();\r\n    }\r\n  }, [location]);\r\n\r\n  const getLocation = async () => {\r\n    if (address.trim() === \"\") {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          ({ coords: { latitude, longitude } }) => {\r\n            setLocation({ latitude, longitude });\r\n            fetchTrafficUpdates();\r\n          },\r\n          () => console.error(\"Unable to retrieve location.\")\r\n        );\r\n      } else {\r\n        console.error(\"Geolocation is not supported.\");\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch(\r\n          `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`\r\n        );\r\n        const [location] = await response.json();\r\n        if (location) {\r\n          const { lat, lon } = location;\r\n          setLocation({ latitude: parseFloat(lat), longitude: parseFloat(lon) });\r\n          setAddress(\"\");\r\n          fetchTrafficUpdates();\r\n        } else {\r\n          console.error(\"Location not found for address:\", address);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching location for address:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        placeholder=\"Search for a location...\"\r\n        value={address}\r\n        onChange={(e) => setAddress(e.target.value)}\r\n      />\r\n      <button onClick={getLocation}>Get Location</button>\r\n      <p>\r\n        {location\r\n          ? `Latitude: ${location.latitude}, Longitude: ${location.longitude}`\r\n          : \"No location available\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}