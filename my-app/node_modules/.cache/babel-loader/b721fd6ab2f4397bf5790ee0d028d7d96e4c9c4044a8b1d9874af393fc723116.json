{"ast":null,"code":"export default SearchBox;\n\n//   const getLocation = async () => {\n//     if (address.trim() === \"\") {\n//       if (navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(\n//           (position) => {\n//             const latitude = position.coords.latitude;\n//             const longitude = position.coords.longitude;\n//             setLocation(`Latitude: ${latitude}, Longitude: ${longitude}`);\n//           },\n//           () => {\n//             setLocation(\"Unable to retrieve location.\");\n//           }\n//         );\n//       } else {\n//         setLocation(\"Geolocation is not supported by this browser.\");\n//       }\n//     } else {\n//       try {\n//         const response = await fetch(\n//           `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`\n//         );\n//         const data = await response.json();\n//         if (data.length > 0) {\n//           const { lat, lon } = data[0];\n//           setLocation(`Latitude: ${lat}, Longitude: ${lon}`);\n//           setAddress(\"\");\n//         } else {\n//           setLocation(\"Location not found.\");\n//         }\n//       } catch {\n//         setLocation(\"Error fetching location.\");\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input ref={inputRef} type=\"text\" placeholder=\"Search for a location...\" value={address} onChange={(e) => setAddress(e.target.value)} />\n//       <button onClick={getLocation}>Get Location</button>\n//       <p>{location}</p>\n//     </div>\n//   );\n// };","map":{"version":3,"names":["SearchBox"],"sources":["/Users/ida/VS-codeProjects/Local-Travel-And-Weather-Dashboard/my-app/src/components/SearchBox/SearchBox.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { useLocationStore } from \"../../store/useInputStore\";\r\nimport { useTrafficStore } from \"../../store/useTrafficStore\";\r\n\r\n\r\n\r\n\r\nexport default SearchBox;\r\n\r\n\r\n  //   const getLocation = async () => {\r\n  //     if (address.trim() === \"\") {\r\n  //       if (navigator.geolocation) {\r\n  //         navigator.geolocation.getCurrentPosition(\r\n  //           (position) => {\r\n  //             const latitude = position.coords.latitude;\r\n  //             const longitude = position.coords.longitude;\r\n  //             setLocation(`Latitude: ${latitude}, Longitude: ${longitude}`);\r\n  //           },\r\n  //           () => {\r\n  //             setLocation(\"Unable to retrieve location.\");\r\n  //           }\r\n  //         );\r\n  //       } else {\r\n  //         setLocation(\"Geolocation is not supported by this browser.\");\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const response = await fetch(\r\n  //           `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`\r\n  //         );\r\n  //         const data = await response.json();\r\n  //         if (data.length > 0) {\r\n  //           const { lat, lon } = data[0];\r\n  //           setLocation(`Latitude: ${lat}, Longitude: ${lon}`);\r\n  //           setAddress(\"\");\r\n  //         } else {\r\n  //           setLocation(\"Location not found.\");\r\n  //         }\r\n  //       } catch {\r\n  //         setLocation(\"Error fetching location.\");\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   return (\r\n  //     <div>\r\n  //       <input ref={inputRef} type=\"text\" placeholder=\"Search for a location...\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n  //       <button onClick={getLocation}>Get Location</button>\r\n  //       <p>{location}</p>\r\n  //     </div>\r\n  //   );\r\n  // };\r\n"],"mappings":"AAOA,eAAeA,SAAS;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}